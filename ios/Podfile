# Uncomment this line to define a global platform for your project
# platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Specify the project and build configurations
project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Function to fetch FLUTTER_ROOT dynamically
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

# Require Flutter's pod helper script
require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

# Setup Flutter pods
flutter_ios_podfile_setup

# Main target
target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # Install Flutter pods and plugins
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # # Test target configuration
  # target 'RunnerTests' do
  #   inherit! :search_paths
  # end
end

# Post-installation configurations
post_install do |installer|
  installer.pods_project.targets.each do |target|
    # Add additional Flutter iOS build settings
    flutter_additional_ios_build_settings(target)
  end
end
